<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.mlec.member.dao.MemberMapper">
	<select id="getMemberInfo1" parameterType="string" resultType="member">
		select id, name, email, addr
		from mybatis_member
		where id = #{id}
	</select>

	<select id="getMemberInfo2" resultType="member" parameterType="member">
		select id, name, email, addr
		from mybatis_member
		where name = #{name}
		and email = #{email}
	</select>

	<select id="getMemberInfo3" resultType="string" parameterType="member">
		select id
		from mybatis_member
		where name = #{name}
		and email = #{email}
	</select>

	<select id="getMemberInfo4" resultType="int">
		select count(*)
		from
		mybatis_member
	</select>

	<select id="getMemberList1" resultType="member">
		select id, join_date as
		joinDate
		from mybatis_member
	</select>

	<resultMap id="memberMap" type="member">
		<result column="id" property="id" />
		<result column="join_date" property="joinDate" />
	</resultMap>

	<select id="getMemberList2" resultMap="memberMap">
		select id, join_date
		from
		mybatis_member
	</select>

	<insert id="insertMember" parameterType="member">
		insert
		into
		mybatis_member (id, name, email, addr)
		values (#{id}, #{name},
		#{email}, #{addr})
	</insert>

	<update id="updateMember" parameterType="member">
		update mybatis_member
		set email = #{email}
		where id = #{id}
	</update>

	<delete id="deleteMember" parameterType="member">
		delete from
		mybatis_member
		where id = #{id}
	</delete>

	<resultMap id="memberMap01" type="member">
		<result column="join_date" property="joinDate" />
	</resultMap>

	<select id="getMemberIteratorList" resultType="member"
		parameterType="member" resultMap="memberMap01">
		select *
		from mybatis_member
		<!-- where addr in ('seoul', 'pusan') -->
		where addr in
		<foreach item="addr" collection="addrs" open="(" close=")"
			separator=",">
			#{addr}
		</foreach>
		and name = #{name}
	</select>

	<sql id="commonMember">
		from mybatis_member
		where name like '%' || #{name} || '%'
		and email like '%' || #{email} || '%'
	</sql>

	<select id="getMemberIncludeList" resultType="member"
		parameterType="member">
		select id, name, email, addr
		<include refid="commonMember"></include>
	</select>

	<select id="getMemberIncludeListCount" resultType="int"
		parameterType="member">
		select count(*)
		<include refid="commonMember"></include>
	</select>

	<select id="getDynamicMemberList1" resultType="member"
		parameterType="member">
		<!-- select * -->
		<!-- from mybatis_member -->
		<!-- where 1 = 1 -->
		<!-- <if test="id != null"> -->
		<!-- and id like '%' || #{id} || '%' -->
		<!-- </if> -->
		<!-- <if test="name != null"> -->
		<!-- and name like '%' || #{name} || '%' -->
		<!-- </if> -->
		<!-- <if test="email != null"> -->
		<!-- and email like '%' || #{email} || '%' -->
		<!-- </if> -->

		select *
		from mybatis_member
		<where>
			<if test="id != null">
				id like '%' || #{id} || '%'
			</if>
			<if test="name != null">
				and name like '%' || #{name} || '%'
			</if>
			<if test="email != null">
				and email like '%' || #{email} || '%'
			</if>
		</where>

	</select>


	<select id="getDynamicMemberList2" resultType="member"
		parameterType="search">

		select *
		from mybatis_member
		<where>
			<choose>
				<when test="searchType == 'id'">
					id like '%' || #{searchWord} || '%'</when>
				<when test="searchType == 'name'">
					and name like '%' || #{searchWord} || '%'</when>
				<otherwise>
					and email like '%' || #{searchWord} || '%'</otherwise>
			</choose>
		</where>

		<!-- <where> -->
		<!-- <if test="searchType == 'id'"> -->
		<!-- id like '%' || #{searchWord} || '%' -->
		<!-- </if> -->
		<!-- <if test="searchType == 'name'"> -->
		<!-- and name like '%' || #{searchWord} || '%' -->
		<!-- </if> -->
		<!-- <if test="searchType == 'email'"> -->
		<!-- and email like '%' || #{searchWord} || '%' -->
		<!-- </if> -->
		<!-- </where> -->

	</select>



</mapper>